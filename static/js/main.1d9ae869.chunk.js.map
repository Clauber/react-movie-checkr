{"version":3,"sources":["components/search-box/search-box.component.jsx","components/carousel-item/carousel-item.component.jsx","components/carousel-list/carousel-list.component.jsx","components/app/app.component.jsx","components/movie-page/movie-page.component.jsx","App.js","serviceWorker.js","index.js"],"names":["SearchBox","placeholder","onChange","value","className","type","CarouselItem","props","console","log","src","item","poster_path","alt","original_title","release_date","length","substring","overview","to","id","CarouselList","items","React","useState","selectedIndex","setSelectedIndex","undefined","gutter","activePosition","chevronWidth","disableSwipe","alwaysShowChevrons","numberOfCards","slidesToScroll","outsideChevron","showSlither","firstAndLastGutter","activeItemIndex","requestToChangeActive","rightChevron","leftChevron","map","x","key","App","state","popularMovies","upcomingMovies","nowPlaying","searchValue","searchedMovies","this","getPopularMovies","getUpcomingMovies","getNowPlaying","axios","get","process","then","Response","setState","data","e","target","movies","results","onSearchChange","Component","withRouter","Movie","selectedMovie","setSelectedMovie","useEffect","Axios","match","params","movieId","response","href","backdrop_path","homepage","basename","exact","path","component","MyApp","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d9ae869.chunk.js","sourcesContent":["import React from 'react'\nimport './search-box.style.scss'\n\nexport const SearchBox = ({placeholder, onChange, value}) =>(\n    <div className=\"search-box\">\n        <input type=\"Search\" placeholder={placeholder} onChange={onChange} value={value} className=\"search\"/>\n    </div>\n    \n)\n// export const SearchBox = ({placeholder, handleChange}) =>(\n//     <input type='search' placeholder={placeholder} onChange={handleChange} className=\"search\"/>\n// )","import React from 'react'\nimport {Route, Link} from 'react-router-dom'\n\nexport const CarouselItem = props => {\n    console.log(props)\n    return(\n        <div className=\"card\">\n                <img className=\"card-img-top\" src={`https://image.tmdb.org/t/p/w500/${props.item.poster_path}`} alt=\"Movie Poster\"/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{props.item.original_title} \n                    {props.item.release_date.length > 0 ? ` (${props.item.release_date.substring(0,4)})`: null}</h5>\n                    <p className=\"card-text\">{`${props.item.overview}`.length > 90 ? `${props.item.overview}`.substring(0,87)+`...` :\n                     `${props.item.overview}`}</p>\n                     <Link to={`/movie/${props.item.id}`} className=\"btn btn-primary\">Read more</Link>\n                    {/* <a href={`${process.env.PUBLIC_URL}/movie/${props.item.id}`} className=\"btn btn-primary\">Read More</a> */}\n                </div>\n                </div>\n    )\n}","import React from 'react'\nimport ItemsCarousel from 'react-items-carousel'\nimport {CarouselItem} from '../carousel-item/carousel-item.component'\n\nexport  const CarouselList = ({items}) => {\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\n    if(items!== undefined)\n    return(\n        <ItemsCarousel \n            gutter={12}\n            activePosition={'center'}\n            chevronWidth={50}\n            disableSwipe={false}\n            alwaysShowChevrons={true}\n            numberOfCards={4}\n            slidesToScroll={2}\n            outsideChevron={true}\n            showSlither={false}\n            firstAndLastGutter={false}\n            activeItemIndex={selectedIndex}\n            requestToChangeActive={value => setSelectedIndex(value)}\n            rightChevron={'>'}\n            leftChevron={'<'}>\n                {items.map(x=> <CarouselItem item={x} key={x.id}/>)}\n        </ItemsCarousel>\n    )\n    else\n    return null;\n}","import React from 'react'\nimport axios from 'axios'\nimport {SearchBox} from'../search-box/search-box.component'\nimport {CarouselList} from '../carousel-list/carousel-list.component'\nimport {withRouter} from 'react-router-dom'\nimport './app.style.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nclass App extends React.Component{\n    state={\n        popularMovies:{},\n        upcomingMovies:{},\n        nowPlaying:{},\n        searchValue:\"\",\n        searchedMovies:{},\n        activeItemIndex: 0\n    }\n    componentDidMount(){\n        this.getPopularMovies();\n        this.getUpcomingMovies();\n        this.getNowPlaying();\n    }\n    getPopularMovies(){\n        axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_MOVIEDB_API_KEY}&page=1`)\n        .then((Response)=>{\n            this.setState({popularMovies: Response.data})\n        })\n    }\n    getUpcomingMovies(){\n        axios.get(`https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_MOVIEDB_API_KEY}&page=1`)\n        .then((Response)=>{\n            this.setState({upcomingMovies: Response.data})\n        })\n    }\n    getNowPlaying(){\n        axios.get(`https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.REACT_APP_MOVIEDB_API_KEY}&page=1`)\n        .then((Response)=>{\n            this.setState({nowPlaying: Response.data})\n        })\n    }\n    onSearchChange(e){\n        this.setState({searchValue: e.target.value});\n        if(this.state.searchValue.length > 4)\n            axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_MOVIEDB_API_KEY}&query=${this.state.searchValue}&page=1`)\n            .then((Response)=>{\n                this.setState({searchedMovies: Response.data});\n                // console.log(this.state.searchedMovies);\n            })\n        // e.target.value = \"\";\n    }\n    render(){\n        let movies = null;\n        if(this.state.searchValue.length < 5){\n            movies = (\n                <div className=\"movies\">\n                    <div className=\"container movie-container\">\n                    <div id=\"popular-movies\" >\n                        <h3>Popular Movies</h3>\n                        <CarouselList items ={this.state.popularMovies.results}/>\n                    </div>\n                </div>\n                <div className=\"container movie-container\">\n                    <div id=\"upcoming-movies\" >\n                    <h3>Upcoming Movies</h3>\n                    <CarouselList items ={this.state.upcomingMovies.results}/>\n                    </div>\n                </div>\n                <div className=\"container movie-container\">\n                    <div id=\"upcoming-movies\" >\n                    <h3>Now Playing</h3>\n                    <CarouselList items ={this.state.nowPlaying.results}/>\n                    </div>\n                </div>\n                </div>\n            )\n        }\n        else if(this.state.searchedMovies !== undefined){\n            movies= (\n            <div className=\"movies\">\n                <div className=\"container movie-container\">\n                    <div className=\"searched-movies\">\n                        <h3>Results for: {this.state.searchValue}</h3>\n                        <CarouselList items = {this.state.searchedMovies.results}/>\n                    </div>\n                </div>\n            </div>\n            )\n        }\n        return(\n            <div id=\"movie-checkr\">\n                <SearchBox placeholder='Search for a movie/actor/producer' value={this.state.searchValue} onChange={(e) => this.onSearchChange(e)}/>\n                {movies}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(App)","import React,{useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport Axios from 'axios';\n\nexport const Movie = (props) =>{\n    let [selectedMovie, setSelectedMovie] = useState({});\n    useEffect(()=>{\n        Axios.get(`https://api.themoviedb.org/3/movie/${props.match.params.movieId}?api_key=${process.env.REACT_APP_MOVIEDB_API_KEY}`)\n        .then(response => {\n            setSelectedMovie(response.data);})\n    }, [props.match.params.movieId])\n    \n    return(\n        <div>\n            <div>\n                <Link className=\"btn btn-primary\" to=\"/\">Back</Link>\n                <a href=\"/\" className=\"btn btn-primary\">Back</a>\n            </div>\n            <div className=\"container\">\n                {selectedMovie !== null &&\n                <div>\n                    <div className=\"movie-container\">\n                        <h3>{selectedMovie.original_title}</h3>\n                        <img src={`https://image.tmdb.org/t/p/w780/${selectedMovie.backdrop_path}`} alt=\"Movie Backdrop\"/>\n                        <p><a href={`${selectedMovie.homepage}`}>{selectedMovie.original_title} - Home Page</a></p>\n                        <p>{selectedMovie.overview}</p>\n                        \n                    </div>\n                </div>}\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {HashRouter, BrowserRouter, Route} from 'react-router-dom'\nimport MyApp from './components/app/app.component'\nimport {Movie} from './components/movie-page/movie-page.component'\n\nimport './App.css';\n\nfunction App() {\n  // console.log(process.env.REACT_APP_MOVIEDB_API_KEY);\n  console.log(\"here\");\n  return (\n    <HashRouter basename=\"/\">\n      <Route exact path=\"/\" component={MyApp}/>\n      <Route path=\"/movie/:movieId\" component={Movie}/>\n    </HashRouter>\n    // <HashRouter>\n    // {/* <BrowserRouter> */}\n    //   <Route exact path=\"/\" component={MyApp}/>\n    //   {/* <MyApp/> */}\n    //   {/* <Route path=\"/movie/:movieId\" component={Movie}/> */}\n    // {/* </BrowserRouter> */}\n    // </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}